<?php

/**
 * Copyright © 2025 by Renaud Guillard (dev@nore.fr)
 * Distributed under the terms of the MIT License, see LICENSE
 *
 * @package HTTP
 *          This file is generated by tools/build-constant-files.php
 *          from http://www.iana.org/assignments/http-fields/field-names.csv
 */
namespace NoreSources\Http\Header;

/**
 * HTTP message header names
 */
class HeaderField
{

	/**
	 * A-IM HTTP message header field name
	 *
	 * [RFC 3229: Delta encoding in HTTP]
	 */
	const A_IM = 'A-IM';

	/**
	 * Accept HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 12.5.1: HTTP Semantics
	 */
	const ACCEPT = 'Accept';

	/**
	 * Accept-Additions HTTP message header field name
	 *
	 * [RFC 2324: Hyper Text Coffee Pot Control Protocol (HTCPCP/1.0)]
	 */
	const ACCEPT_ADDITIONS = 'Accept-Additions';

	/**
	 * Accept-CH HTTP message header field name
	 *
	 * [RFC 8942, Section 3.1: HTTP Client Hints]
	 */
	const ACCEPT_CH = 'Accept-CH';

	/**
	 * Accept-Charset HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 12.5.2: HTTP Semantics
	 */
	const ACCEPT_CHARSET = 'Accept-Charset';

	/**
	 * Accept-Datetime HTTP message header field name
	 *
	 * [RFC 7089: HTTP Framework for Time-Based Access to Resource States -- Memento]
	 */
	const ACCEPT_DATETIME = 'Accept-Datetime';

	/**
	 * Accept-Encoding HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 12.5.3: HTTP Semantics
	 */
	const ACCEPT_ENCODING = 'Accept-Encoding';

	/**
	 * Accept-Features HTTP message header field name
	 *
	 * [RFC 2295: Transparent Content Negotiation in HTTP]
	 */
	const ACCEPT_FEATURES = 'Accept-Features';

	/**
	 * Accept-Language HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 12.5.4: HTTP Semantics
	 */
	const ACCEPT_LANGUAGE = 'Accept-Language';

	/**
	 * Accept-Patch HTTP message header field name
	 *
	 * [RFC 5789: PATCH Method for HTTP]
	 */
	const ACCEPT_PATCH = 'Accept-Patch';

	/**
	 * Accept-Post HTTP message header field name
	 *
	 * [Linked Data Platform 1.0]
	 */
	const ACCEPT_POST = 'Accept-Post';

	/**
	 * Accept-Ranges HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 14.3: HTTP Semantics
	 */
	const ACCEPT_RANGES = 'Accept-Ranges';

	/**
	 * Accept-Signature HTTP message header field name
	 *
	 * [RFC 9421, Section 5.1: HTTP Message Signatures]
	 */
	const ACCEPT_SIGNATURE = 'Accept-Signature';

	/**
	 * Access-Control HTTP message header field name
	 *
	 * [Access Control for Cross-site Requests]
	 */
	const ACCESS_CONTROL = 'Access-Control';

	/**
	 * Access-Control-Allow-Credentials HTTP message header field name
	 *
	 * [Fetch]
	 */
	const ACCESS_CONTROL_ALLOW_CREDENTIALS = 'Access-Control-Allow-Credentials';

	/**
	 * Access-Control-Allow-Headers HTTP message header field name
	 *
	 * [Fetch]
	 */
	const ACCESS_CONTROL_ALLOW_HEADERS = 'Access-Control-Allow-Headers';

	/**
	 * Access-Control-Allow-Methods HTTP message header field name
	 *
	 * [Fetch]
	 */
	const ACCESS_CONTROL_ALLOW_METHODS = 'Access-Control-Allow-Methods';

	/**
	 * Access-Control-Allow-Origin HTTP message header field name
	 *
	 * [Fetch]
	 */
	const ACCESS_CONTROL_ALLOW_ORIGIN = 'Access-Control-Allow-Origin';

	/**
	 * Access-Control-Expose-Headers HTTP message header field name
	 *
	 * [Fetch]
	 */
	const ACCESS_CONTROL_EXPOSE_HEADERS = 'Access-Control-Expose-Headers';

	/**
	 * Access-Control-Max-Age HTTP message header field name
	 *
	 * [Fetch]
	 */
	const ACCESS_CONTROL_MAX_AGE = 'Access-Control-Max-Age';

	/**
	 * Access-Control-Request-Headers HTTP message header field name
	 *
	 * [Fetch]
	 */
	const ACCESS_CONTROL_REQUEST_HEADERS = 'Access-Control-Request-Headers';

	/**
	 * Access-Control-Request-Method HTTP message header field name
	 *
	 * [Fetch]
	 */
	const ACCESS_CONTROL_REQUEST_METHOD = 'Access-Control-Request-Method';

	/**
	 * Activate-Storage-Access HTTP message header field name
	 *
	 * [https://privacycg.github.io/storage-access-headers]
	 */
	const ACTIVATE_STORAGE_ACCESS = 'Activate-Storage-Access';

	/**
	 * Age HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9111 Section 5.1: HTTP Caching
	 */
	const AGE = 'Age';

	/**
	 * Allow HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 10.2.1: HTTP Semantics
	 */
	const ALLOW = 'Allow';

	/**
	 * ALPN HTTP message header field name
	 *
	 * [RFC 7639, Section 2: The ALPN HTTP Header Field]
	 */
	const ALPN = 'ALPN';

	/**
	 * Alt-Svc HTTP message header field name
	 *
	 * [RFC 7838: HTTP Alternative Services]
	 */
	const ALT_SVC = 'Alt-Svc';

	/**
	 * Alt-Used HTTP message header field name
	 *
	 * [RFC 7838: HTTP Alternative Services]
	 */
	const ALT_USED = 'Alt-Used';

	/**
	 * Alternates HTTP message header field name
	 *
	 * [RFC 2295: Transparent Content Negotiation in HTTP]
	 */
	const ALTERNATES = 'Alternates';

	/**
	 * AMP-Cache-Transform HTTP message header field name
	 *
	 * [AMP-Cache-Transform HTTP request header]
	 */
	const AMP_CACHE_TRANSFORM = 'AMP-Cache-Transform';

	/**
	 * Apply-To-Redirect-Ref HTTP message header field name
	 *
	 * [RFC 4437: Web Distributed Authoring and Versioning (WebDAV) Redirect Reference Resources]
	 */
	const APPLY_TO_REDIRECT_REF = 'Apply-To-Redirect-Ref';

	/**
	 * Authentication-Control HTTP message header field name
	 *
	 * [RFC 8053, Section 4: HTTP Authentication Extensions for Interactive Clients]
	 */
	const AUTHENTICATION_CONTROL = 'Authentication-Control';

	/**
	 * Authentication-Info HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 11.6.3: HTTP Semantics
	 */
	const AUTHENTICATION_INFO = 'Authentication-Info';

	/**
	 * Authorization HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 11.6.2: HTTP Semantics
	 */
	const AUTHORIZATION = 'Authorization';

	/**
	 * Available-Dictionary HTTP message header field name
	 *
	 * [RFC-ietf-httpbis-compression-dictionary-19, Section 2.2: Compression Dictionary Transport]
	 */
	const AVAILABLE_DICTIONARY = 'Available-Dictionary';

	/**
	 * C-Ext HTTP message header field name
	 *
	 * [RFC 2774: An HTTP Extension Framework]
	 */
	const C_EXT = 'C-Ext';

	/**
	 * C-Man HTTP message header field name
	 *
	 * [RFC 2774: An HTTP Extension Framework]
	 */
	const C_MAN = 'C-Man';

	/**
	 * C-Opt HTTP message header field name
	 *
	 * [RFC 2774: An HTTP Extension Framework]
	 */
	const C_OPT = 'C-Opt';

	/**
	 * C-PEP HTTP message header field name
	 *
	 * [PEP - an Extension Mechanism for HTTP]
	 */
	const C_PEP = 'C-PEP';

	/**
	 * C-PEP-Info HTTP message header field name
	 *
	 * [PEP - an Extension Mechanism for HTTP]
	 */
	const C_PEP_INFO = 'C-PEP-Info';

	/**
	 * Cache-Control HTTP message header field name
	 *
	 *
	 * @see https://tools.ietf.org/html/rfc9111#section-5.2
	 */
	const CACHE_CONTROL = 'Cache-Control';

	/**
	 * Cache-Status HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9211 The Cache-Status HTTP Response Header Field
	 */
	const CACHE_STATUS = 'Cache-Status';

	/**
	 * Cal-Managed-ID HTTP message header field name
	 *
	 * [RFC 8607, Section 5.1: Calendaring Extensions to WebDAV (CalDAV): Managed Attachments]
	 */
	const CAL_MANAGED_ID = 'Cal-Managed-ID';

	/**
	 * CalDAV-Timezones HTTP message header field name
	 *
	 * [RFC 7809, Section 7.1: Calendaring Extensions to WebDAV (CalDAV): Time Zones by Reference]
	 */
	const CAL_DAV_TIMEZONES = 'CalDAV-Timezones';

	/**
	 * Capsule-Protocol HTTP message header field name
	 *
	 *
	 * @see https://tools.ietf.org/html/rfc9297
	 */
	const CAPSULE_PROTOCOL = 'Capsule-Protocol';

	/**
	 * CDN-Cache-Control HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9213 Targeted HTTP Cache Control
	 */
	const CDN_CACHE_CONTROL = 'CDN-Cache-Control';

	/**
	 * CDN-Loop HTTP message header field name
	 *
	 * [RFC 8586: Loop Detection in Content Delivery Networks (CDNs)]
	 */
	const CDN_LOOP = 'CDN-Loop';

	/**
	 * Cert-Not-After HTTP message header field name
	 *
	 * [RFC 8739, Section 3.3: Support for Short-Term, Automatically Renewed (STAR) Certificates in
	 * the Automated Certificate Management Environment (ACME)]
	 */
	const CERT_NOT_AFTER = 'Cert-Not-After';

	/**
	 * Cert-Not-Before HTTP message header field name
	 *
	 * [RFC 8739, Section 3.3: Support for Short-Term, Automatically Renewed (STAR) Certificates in
	 * the Automated Certificate Management Environment (ACME)]
	 */
	const CERT_NOT_BEFORE = 'Cert-Not-Before';

	/**
	 * Clear-Site-Data HTTP message header field name
	 *
	 * [Clear Site Data]
	 */
	const CLEAR_SITE_DATA = 'Clear-Site-Data';

	/**
	 * Client-Cert HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9440 Section 2: Client-Cert HTTP Header Field
	 */
	const CLIENT_CERT = 'Client-Cert';

	/**
	 * Client-Cert-Chain HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9440 Section 2: Client-Cert HTTP Header Field
	 */
	const CLIENT_CERT_CHAIN = 'Client-Cert-Chain';

	/**
	 * Close HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9112 Section 9.6: HTTP/1.1
	 */
	const CLOSE = 'Close';

	/**
	 * CMCD-Object HTTP message header field name
	 *
	 * [CTA][CTA-5004 Common Media Client Data]
	 */
	const CMCD_OBJECT = 'CMCD-Object';

	/**
	 * CMCD-Request HTTP message header field name
	 *
	 * [CTA][CTA-5004 Common Media Client Data]
	 */
	const CMCD_REQUEST = 'CMCD-Request';

	/**
	 * CMCD-Session HTTP message header field name
	 *
	 * [CTA][CTA-5004 Common Media Client Data]
	 */
	const CMCD_SESSION = 'CMCD-Session';

	/**
	 * CMCD-Status HTTP message header field name
	 *
	 * [CTA][CTA-5004 Common Media Client Data]
	 */
	const CMCD_STATUS = 'CMCD-Status';

	/**
	 * CMSD-Dynamic HTTP message header field name
	 *
	 * [CTA][CTA-5006 Common Media Server Data (CMSD)]
	 */
	const CMSD_DYNAMIC = 'CMSD-Dynamic';

	/**
	 * CMSD-Static HTTP message header field name
	 *
	 * [CTA][CTA-5006 Common Media Server Data (CMSD)]
	 */
	const CMSD_STATIC = 'CMSD-Static';

	/**
	 * Concealed-Auth-Export HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9729 The Concealed HTTP Authentication Scheme
	 */
	const CONCEALED_AUTH_EXPORT = 'Concealed-Auth-Export';

	/**
	 * Configuration-Context HTTP message header field name
	 *
	 * [OSLC Configuration Management Version 1.0. Part 3: Configuration Specification]
	 */
	const CONFIGURATION_CONTEXT = 'Configuration-Context';

	/**
	 * Connection HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 7.6.1: HTTP Semantics
	 */
	const CONNECTION = 'Connection';

	/**
	 * Content-Base HTTP message header field name
	 *
	 * [RFC 2068: Hypertext Transfer Protocol -- HTTP/1.1]
	 */
	const CONTENT_BASE = 'Content-Base';

	/**
	 * Content-Digest HTTP message header field name
	 *
	 * [RFC 9530, Section 2: Digest Fields]
	 */
	const CONTENT_DIGEST = 'Content-Digest';

	/**
	 * Content-Disposition HTTP message header field name
	 *
	 * [RFC 6266: Use of the Content-Disposition Header Field in the Hypertext Transfer Protocol
	 * (HTTP)]
	 */
	const CONTENT_DISPOSITION = 'Content-Disposition';

	/**
	 * Content-Encoding HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 8.4: HTTP Semantics
	 */
	const CONTENT_ENCODING = 'Content-Encoding';

	/**
	 * Content-ID HTTP message header field name
	 *
	 * [The HTTP Distribution and Replication Protocol]
	 */
	const CONTENT_ID = 'Content-ID';

	/**
	 * Content-Language HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 8.5: HTTP Semantics
	 */
	const CONTENT_LANGUAGE = 'Content-Language';

	/**
	 * Content-Length HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 8.6: HTTP Semantics
	 */
	const CONTENT_LENGTH = 'Content-Length';

	/**
	 * Content-Location HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 8.7: HTTP Semantics
	 */
	const CONTENT_LOCATION = 'Content-Location';

	/**
	 * Content-MD5 HTTP message header field name
	 *
	 * [RFC 2616, Section 14.15: Hypertext Transfer Protocol -- HTTP/1.1]
	 */
	const CONTENT_MD_5 = 'Content-MD5';

	/**
	 * Content-Range HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 14.4: HTTP Semantics
	 */
	const CONTENT_RANGE = 'Content-Range';

	/**
	 * Content-Script-Type HTTP message header field name
	 *
	 * [HTML 4.01 Specification]
	 */
	const CONTENT_SCRIPT_TYPE = 'Content-Script-Type';

	/**
	 * Content-Security-Policy HTTP message header field name
	 *
	 * [Content Security Policy Level 3]
	 */
	const CONTENT_SECURITY_POLICY = 'Content-Security-Policy';

	/**
	 * Content-Security-Policy-Report-Only HTTP message header field name
	 *
	 * [Content Security Policy Level 3]
	 */
	const CONTENT_SECURITY_POLICY_REPORT_ONLY = 'Content-Security-Policy-Report-Only';

	/**
	 * Content-Style-Type HTTP message header field name
	 *
	 * [HTML 4.01 Specification]
	 */
	const CONTENT_STYLE_TYPE = 'Content-Style-Type';

	/**
	 * Content-Type HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 8.3: HTTP Semantics
	 */
	const CONTENT_TYPE = 'Content-Type';

	/**
	 * Content-Version HTTP message header field name
	 *
	 * [RFC 2068: Hypertext Transfer Protocol -- HTTP/1.1]
	 */
	const CONTENT_VERSION = 'Content-Version';

	/**
	 * Cookie HTTP message header field name
	 *
	 * [RFC 6265: HTTP State Management Mechanism]
	 */
	const COOKIE = 'Cookie';

	/**
	 * Cookie2 HTTP message header field name
	 *
	 * [RFC 2965: HTTP State Management Mechanism]
	 */
	const COOKIE_2 = 'Cookie2';

	/**
	 * Cross-Origin-Embedder-Policy HTTP message header field name
	 *
	 * [HTML]
	 */
	const CROSS_ORIGIN_EMBEDDER_POLICY = 'Cross-Origin-Embedder-Policy';

	/**
	 * Cross-Origin-Embedder-Policy-Report-Only HTTP message header field name
	 *
	 * [HTML]
	 */
	const CROSS_ORIGIN_EMBEDDER_POLICY_REPORT_ONLY = 'Cross-Origin-Embedder-Policy-Report-Only';

	/**
	 * Cross-Origin-Opener-Policy HTTP message header field name
	 *
	 * [HTML]
	 */
	const CROSS_ORIGIN_OPENER_POLICY = 'Cross-Origin-Opener-Policy';

	/**
	 * Cross-Origin-Opener-Policy-Report-Only HTTP message header field name
	 *
	 * [HTML]
	 */
	const CROSS_ORIGIN_OPENER_POLICY_REPORT_ONLY = 'Cross-Origin-Opener-Policy-Report-Only';

	/**
	 * Cross-Origin-Resource-Policy HTTP message header field name
	 *
	 * [Fetch]
	 */
	const CROSS_ORIGIN_RESOURCE_POLICY = 'Cross-Origin-Resource-Policy';

	/**
	 * CTA-Common-Access-Token HTTP message header field name
	 *
	 * [CTA][Chris_Lemmons]
	 */
	const CTA_COMMON_ACCESS_TOKEN = 'CTA-Common-Access-Token';

	/**
	 * DASL HTTP message header field name
	 *
	 * [RFC 5323: Web Distributed Authoring and Versioning (WebDAV) SEARCH]
	 */
	const DASL = 'DASL';

	/**
	 * Date HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 6.6.1: HTTP Semantics
	 */
	const DATE = 'Date';

	/**
	 * DAV HTTP message header field name
	 *
	 * [RFC 4918: HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)]
	 */
	const DAV = 'DAV';

	/**
	 * Default-Style HTTP message header field name
	 *
	 * [HTML 4.01 Specification]
	 */
	const DEFAULT_STYLE = 'Default-Style';

	/**
	 * Delta-Base HTTP message header field name
	 *
	 * [RFC 3229: Delta encoding in HTTP]
	 */
	const DELTA_BASE = 'Delta-Base';

	/**
	 * Deprecation HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9745 Section 2: The Deprecation HTTP Response Header
	 *      Field
	 */
	const DEPRECATION = 'Deprecation';

	/**
	 * Depth HTTP message header field name
	 *
	 * [RFC 4918: HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)]
	 */
	const DEPTH = 'Depth';

	/**
	 * Derived-From HTTP message header field name
	 *
	 * [RFC 2068: Hypertext Transfer Protocol -- HTTP/1.1]
	 */
	const DERIVED_FROM = 'Derived-From';

	/**
	 * Destination HTTP message header field name
	 *
	 * [RFC 4918: HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)]
	 */
	const DESTINATION = 'Destination';

	/**
	 * Detached-JWS HTTP message header field name
	 *
	 * [RFC 9635: Grant Negotiation and Authorization Protocol (GNAP)]
	 */
	const DETACHED_JWS = 'Detached-JWS';

	/**
	 * Differential-ID HTTP message header field name
	 *
	 * [The HTTP Distribution and Replication Protocol]
	 */
	const DIFFERENTIAL_ID = 'Differential-ID';

	/**
	 * Dictionary-ID HTTP message header field name
	 *
	 * [RFC-ietf-httpbis-compression-dictionary-19, Section 2.3: Compression Dictionary Transport]
	 */
	const DICTIONARY_ID = 'Dictionary-ID';

	/**
	 * Digest HTTP message header field name
	 *
	 * [RFC 3230: Instance Digests in HTTP]
	 */
	const DIGEST = 'Digest';

	/**
	 * DPoP HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9449 OAuth 2.0 Demonstrating Proof of Possession (DPoP)
	 */
	const D_PO_P = 'DPoP';

	/**
	 * DPoP-Nonce HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9449 OAuth 2.0 Demonstrating Proof of Possession (DPoP)
	 */
	const D_PO_P_NONCE = 'DPoP-Nonce';

	/**
	 * Early-Data HTTP message header field name
	 *
	 * [RFC 8470: Using Early Data in HTTP]
	 */
	const EARLY_DATA = 'Early-Data';

	/**
	 * EDIINT-Features HTTP message header field name
	 *
	 * [RFC 6017: Electronic Data Interchange - Internet Integration (EDIINT) Features Header Field]
	 */
	const EDIINT_FEATURES = 'EDIINT-Features';

	/**
	 * ETag HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 8.8.3: HTTP Semantics
	 */
	const E_TAG = 'ETag';

	/**
	 * Expect HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 10.1.1: HTTP Semantics
	 */
	const EXPECT = 'Expect';

	/**
	 * Expect-CT HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9163 Expect-CT Extension for HTTP
	 */
	const EXPECT_CT = 'Expect-CT';

	/**
	 * Expires HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9111 Section 5.3: HTTP Caching
	 */
	const EXPIRES = 'Expires';

	/**
	 * Ext HTTP message header field name
	 *
	 * [RFC 2774: An HTTP Extension Framework]
	 */
	const EXT = 'Ext';

	/**
	 * Forwarded HTTP message header field name
	 *
	 * [RFC 7239: Forwarded HTTP Extension]
	 */
	const FORWARDED = 'Forwarded';

	/**
	 * From HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 10.1.2: HTTP Semantics
	 */
	const FROM = 'From';

	/**
	 * GetProfile HTTP message header field name
	 *
	 * [Implementation of OPS Over HTTP]
	 */
	const GET_PROFILE = 'GetProfile';

	/**
	 * Hobareg HTTP message header field name
	 *
	 * [RFC 7486, Section 6.1.1: HTTP Origin-Bound Authentication (HOBA)]
	 */
	const HOBAREG = 'Hobareg';

	/**
	 * Host HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 7.2: HTTP Semantics
	 */
	const HOST = 'Host';

	/**
	 * HTTP2-Settings HTTP message header field name
	 *
	 * [RFC 7540, Section 3.2.1: Hypertext Transfer Protocol Version 2 (HTTP/2)]
	 */
	const HTTP_2_SETTINGS = 'HTTP2-Settings';

	/**
	 * If HTTP message header field name
	 *
	 * [RFC 4918: HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)]
	 */
	const IF = 'If';

	/**
	 * If-Match HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 13.1.1: HTTP Semantics
	 */
	const IF_MATCH = 'If-Match';

	/**
	 * If-Modified-Since HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 13.1.3: HTTP Semantics
	 */
	const IF_MODIFIED_SINCE = 'If-Modified-Since';

	/**
	 * If-None-Match HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 13.1.2: HTTP Semantics
	 */
	const IF_NONE_MATCH = 'If-None-Match';

	/**
	 * If-Range HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 13.1.5: HTTP Semantics
	 */
	const IF_RANGE = 'If-Range';

	/**
	 * If-Schedule-Tag-Match HTTP message header field name
	 *
	 * [ RFC 6338: Scheduling Extensions to CalDAV]
	 */
	const IF_SCHEDULE_TAG_MATCH = 'If-Schedule-Tag-Match';

	/**
	 * If-Unmodified-Since HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 13.1.4: HTTP Semantics
	 */
	const IF_UNMODIFIED_SINCE = 'If-Unmodified-Since';

	/**
	 * IM HTTP message header field name
	 *
	 * [RFC 3229: Delta encoding in HTTP]
	 */
	const IM = 'IM';

	/**
	 * Include-Referred-Token-Binding-ID HTTP message header field name
	 *
	 * [RFC 8473: Token Binding over HTTP]
	 */
	const INCLUDE_REFERRED_TOKEN_BINDING_ID = 'Include-Referred-Token-Binding-ID';

	/**
	 * Isolation HTTP message header field name
	 *
	 * [OData Version 4.01 Part 1: Protocol][OASIS][Chet_Ensign]
	 */
	const ISOLATION = 'Isolation';

	/**
	 * Keep-Alive HTTP message header field name
	 *
	 * [RFC 2068: Hypertext Transfer Protocol -- HTTP/1.1]
	 */
	const KEEP_ALIVE = 'Keep-Alive';

	/**
	 * Label HTTP message header field name
	 *
	 * [RFC 3253: Versioning Extensions to WebDAV: (Web Distributed Authoring and Versioning)]
	 */
	const LABEL = 'Label';

	/**
	 * Last-Event-ID HTTP message header field name
	 *
	 * [HTML]
	 */
	const LAST_EVENT_ID = 'Last-Event-ID';

	/**
	 * Last-Modified HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 8.8.2: HTTP Semantics
	 */
	const LAST_MODIFIED = 'Last-Modified';

	/**
	 * Link HTTP message header field name
	 *
	 * [RFC 8288: Web Linking]
	 */
	const LINK = 'Link';

	/**
	 * Link-Template HTTP message header field name
	 *
	 * [RFC 9652: The Link-Template HTTP Header Field]
	 */
	const LINK_TEMPLATE = 'Link-Template';

	/**
	 * Location HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 10.2.2: HTTP Semantics
	 */
	const LOCATION = 'Location';

	/**
	 * Lock-Token HTTP message header field name
	 *
	 * [RFC 4918: HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)]
	 */
	const LOCK_TOKEN = 'Lock-Token';

	/**
	 * Man HTTP message header field name
	 *
	 * [RFC 2774: An HTTP Extension Framework]
	 */
	const MAN = 'Man';

	/**
	 * Max-Forwards HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 7.6.2: HTTP Semantics
	 */
	const MAX_FORWARDS = 'Max-Forwards';

	/**
	 * Memento-Datetime HTTP message header field name
	 *
	 * [RFC 7089: HTTP Framework for Time-Based Access to Resource States -- Memento]
	 */
	const MEMENTO_DATETIME = 'Memento-Datetime';

	/**
	 * Meter HTTP message header field name
	 *
	 * [RFC 2227: Simple Hit-Metering and Usage-Limiting for HTTP]
	 */
	const METER = 'Meter';

	/**
	 * Method-Check HTTP message header field name
	 *
	 * [Access Control for Cross-site Requests]
	 */
	const METHOD_CHECK = 'Method-Check';

	/**
	 * Method-Check-Expires HTTP message header field name
	 *
	 * [Access Control for Cross-site Requests]
	 */
	const METHOD_CHECK_EXPIRES = 'Method-Check-Expires';

	/**
	 * MIME-Version HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9112 Appendix B.1: HTTP/1.1
	 */
	const MIME_VERSION = 'MIME-Version';

	/**
	 * Negotiate HTTP message header field name
	 *
	 * [RFC 2295: Transparent Content Negotiation in HTTP]
	 */
	const NEGOTIATE = 'Negotiate';

	/**
	 * NEL HTTP message header field name
	 *
	 * [Network Error Logging]
	 */
	const NEL = 'NEL';

	/**
	 * OData-EntityId HTTP message header field name
	 *
	 * [OData Version 4.01 Part 1: Protocol][OASIS][Chet_Ensign]
	 */
	const O_DATA_ENTITY_ID = 'OData-EntityId';

	/**
	 * OData-Isolation HTTP message header field name
	 *
	 * [OData Version 4.01 Part 1: Protocol][OASIS][Chet_Ensign]
	 */
	const O_DATA_ISOLATION = 'OData-Isolation';

	/**
	 * OData-MaxVersion HTTP message header field name
	 *
	 * [OData Version 4.01 Part 1: Protocol][OASIS][Chet_Ensign]
	 */
	const O_DATA_MAX_VERSION = 'OData-MaxVersion';

	/**
	 * OData-Version HTTP message header field name
	 *
	 * [OData Version 4.01 Part 1: Protocol][OASIS][Chet_Ensign]
	 */
	const O_DATA_VERSION = 'OData-Version';

	/**
	 * Opt HTTP message header field name
	 *
	 * [RFC 2774: An HTTP Extension Framework]
	 */
	const OPT = 'Opt';

	/**
	 * Optional-WWW-Authenticate HTTP message header field name
	 *
	 * [RFC 8053, Section 3: HTTP Authentication Extensions for Interactive Clients]
	 */
	const OPTIONAL_WWW_AUTHENTICATE = 'Optional-WWW-Authenticate';

	/**
	 * Ordering-Type HTTP message header field name
	 *
	 * [RFC 3648: Web Distributed Authoring and Versioning (WebDAV) Ordered Collections Protocol]
	 */
	const ORDERING_TYPE = 'Ordering-Type';

	/**
	 * Origin HTTP message header field name
	 *
	 * [RFC 6454: The Web Origin Concept]
	 */
	const ORIGIN = 'Origin';

	/**
	 * Origin-Agent-Cluster HTTP message header field name
	 *
	 * [HTML]
	 */
	const ORIGIN_AGENT_CLUSTER = 'Origin-Agent-Cluster';

	/**
	 * OSCORE HTTP message header field name
	 *
	 * [RFC 8613, Section 11.1: Object Security for Constrained RESTful Environments (OSCORE)]
	 */
	const OSCORE = 'OSCORE';

	/**
	 * OSLC-Core-Version HTTP message header field name
	 *
	 * [OASIS Project Specification 01][OASIS][Chet_Ensign]
	 */
	const OSLC_CORE_VERSION = 'OSLC-Core-Version';

	/**
	 * Overwrite HTTP message header field name
	 *
	 * [RFC 4918: HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)]
	 */
	const OVERWRITE = 'Overwrite';

	/**
	 * P3P HTTP message header field name
	 *
	 * [The Platform for Privacy Preferences 1.0 (P3P1.0) Specification]
	 */
	const P_3_P = 'P3P';

	/**
	 * PEP HTTP message header field name
	 *
	 * [PEP - an Extension Mechanism for HTTP]
	 */
	const PEP = 'PEP';

	/**
	 * PEP-Info HTTP message header field name
	 *
	 * [PEP - an Extension Mechanism for HTTP]
	 */
	const PEP_INFO = 'PEP-Info';

	/**
	 * Permissions-Policy HTTP message header field name
	 *
	 * [Permissions Policy]
	 */
	const PERMISSIONS_POLICY = 'Permissions-Policy';

	/**
	 * PICS-Label HTTP message header field name
	 *
	 * [PICS Label Distribution Label Syntax and Communication Protocols]
	 */
	const PICS_LABEL = 'PICS-Label';

	/**
	 * Ping-From HTTP message header field name
	 *
	 * [HTML]
	 */
	const PING_FROM = 'Ping-From';

	/**
	 * Ping-To HTTP message header field name
	 *
	 * [HTML]
	 */
	const PING_TO = 'Ping-To';

	/**
	 * Position HTTP message header field name
	 *
	 * [RFC 3648: Web Distributed Authoring and Versioning (WebDAV) Ordered Collections Protocol]
	 */
	const POSITION = 'Position';

	/**
	 * Pragma HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9111 Section 5.4: HTTP Caching
	 */
	const PRAGMA = 'Pragma';

	/**
	 * Prefer HTTP message header field name
	 *
	 * [RFC 7240: Prefer Header for HTTP]
	 */
	const PREFER = 'Prefer';

	/**
	 * Preference-Applied HTTP message header field name
	 *
	 * [RFC 7240: Prefer Header for HTTP]
	 */
	const PREFERENCE_APPLIED = 'Preference-Applied';

	/**
	 * Priority HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9218 Extensible Prioritization Scheme for HTTP
	 */
	const PRIORITY = 'Priority';

	/**
	 * ProfileObject HTTP message header field name
	 *
	 * [Implementation of OPS Over HTTP]
	 */
	const PROFILE_OBJECT = 'ProfileObject';

	/**
	 * Protocol HTTP message header field name
	 *
	 * [PICS Label Distribution Label Syntax and Communication Protocols]
	 */
	const PROTOCOL = 'Protocol';

	/**
	 * Protocol-Info HTTP message header field name
	 *
	 * [White Paper: Joint Electronic Payment Initiative]
	 */
	const PROTOCOL_INFO = 'Protocol-Info';

	/**
	 * Protocol-Query HTTP message header field name
	 *
	 * [White Paper: Joint Electronic Payment Initiative]
	 */
	const PROTOCOL_QUERY = 'Protocol-Query';

	/**
	 * Protocol-Request HTTP message header field name
	 *
	 * [PICS Label Distribution Label Syntax and Communication Protocols]
	 */
	const PROTOCOL_REQUEST = 'Protocol-Request';

	/**
	 * Proxy-Authenticate HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 11.7.1: HTTP Semantics
	 */
	const PROXY_AUTHENTICATE = 'Proxy-Authenticate';

	/**
	 * Proxy-Authentication-Info HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 11.7.3: HTTP Semantics
	 */
	const PROXY_AUTHENTICATION_INFO = 'Proxy-Authentication-Info';

	/**
	 * Proxy-Authorization HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 11.7.2: HTTP Semantics
	 */
	const PROXY_AUTHORIZATION = 'Proxy-Authorization';

	/**
	 * Proxy-Features HTTP message header field name
	 *
	 * [Notification for Proxy Caches]
	 */
	const PROXY_FEATURES = 'Proxy-Features';

	/**
	 * Proxy-Instruction HTTP message header field name
	 *
	 * [Notification for Proxy Caches]
	 */
	const PROXY_INSTRUCTION = 'Proxy-Instruction';

	/**
	 * Proxy-Status HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9209 The Proxy-Status HTTP Response Header Field
	 */
	const PROXY_STATUS = 'Proxy-Status';

	/**
	 * Public HTTP message header field name
	 *
	 * [RFC 2068: Hypertext Transfer Protocol -- HTTP/1.1]
	 */
	const PUBLIC = 'Public';

	/**
	 * Public-Key-Pins HTTP message header field name
	 *
	 * [RFC 7469: Public Key Pinning Extension for HTTP]
	 */
	const PUBLIC_KEY_PINS = 'Public-Key-Pins';

	/**
	 * Public-Key-Pins-Report-Only HTTP message header field name
	 *
	 * [RFC 7469: Public Key Pinning Extension for HTTP]
	 */
	const PUBLIC_KEY_PINS_REPORT_ONLY = 'Public-Key-Pins-Report-Only';

	/**
	 * Range HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 14.2: HTTP Semantics
	 */
	const RANGE = 'Range';

	/**
	 * Redirect-Ref HTTP message header field name
	 *
	 * [RFC 4437: Web Distributed Authoring and Versioning (WebDAV) Redirect Reference Resources]
	 */
	const REDIRECT_REF = 'Redirect-Ref';

	/**
	 * Referer HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 10.1.3: HTTP Semantics
	 */
	const REFERER = 'Referer';

	/**
	 * Referer-Root HTTP message header field name
	 *
	 * [Access Control for Cross-site Requests]
	 */
	const REFERER_ROOT = 'Referer-Root';

	/**
	 * Referrer-Policy HTTP message header field name
	 *
	 * [Referrer Policy]
	 */
	const REFERRER_POLICY = 'Referrer-Policy';

	/**
	 * Refresh HTTP message header field name
	 *
	 * [HTML]
	 */
	const REFRESH = 'Refresh';

	/**
	 * Repeatability-Client-ID HTTP message header field name
	 *
	 * [Repeatable Requests Version 1.0][OASIS][Chet_Ensign]
	 */
	const REPEATABILITY_CLIENT_ID = 'Repeatability-Client-ID';

	/**
	 * Repeatability-First-Sent HTTP message header field name
	 *
	 * [Repeatable Requests Version 1.0][OASIS][Chet_Ensign]
	 */
	const REPEATABILITY_FIRST_SENT = 'Repeatability-First-Sent';

	/**
	 * Repeatability-Request-ID HTTP message header field name
	 *
	 * [Repeatable Requests Version 1.0][OASIS][Chet_Ensign]
	 */
	const REPEATABILITY_REQUEST_ID = 'Repeatability-Request-ID';

	/**
	 * Repeatability-Result HTTP message header field name
	 *
	 * [Repeatable Requests Version 1.0][OASIS][Chet_Ensign]
	 */
	const REPEATABILITY_RESULT = 'Repeatability-Result';

	/**
	 * Replay-Nonce HTTP message header field name
	 *
	 * [RFC 8555, Section 6.5.1: Automatic Certificate Management Environment (ACME)]
	 */
	const REPLAY_NONCE = 'Replay-Nonce';

	/**
	 * Reporting-Endpoints HTTP message header field name
	 *
	 * [Reporting API]
	 */
	const REPORTING_ENDPOINTS = 'Reporting-Endpoints';

	/**
	 * Repr-Digest HTTP message header field name
	 *
	 * [RFC 9530, Section 3: Digest Fields]
	 */
	const REPR_DIGEST = 'Repr-Digest';

	/**
	 * Retry-After HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 10.2.3: HTTP Semantics
	 */
	const RETRY_AFTER = 'Retry-After';

	/**
	 * Safe HTTP message header field name
	 *
	 * [RFC 2310: The Safe Response Header Field]
	 */
	const SAFE = 'Safe';

	/**
	 * Schedule-Reply HTTP message header field name
	 *
	 * [RFC 6638: Scheduling Extensions to CalDAV]
	 */
	const SCHEDULE_REPLY = 'Schedule-Reply';

	/**
	 * Schedule-Tag HTTP message header field name
	 *
	 * [RFC 6338: Scheduling Extensions to CalDAV]
	 */
	const SCHEDULE_TAG = 'Schedule-Tag';

	/**
	 * Sec-Fetch-Dest HTTP message header field name
	 *
	 * [https://www.w3.org/TR/fetch-metadata/#sec-fetch-dest-header]
	 */
	const SEC_FETCH_DEST = 'Sec-Fetch-Dest';

	/**
	 * Sec-Fetch-Mode HTTP message header field name
	 *
	 * [https://www.w3.org/TR/fetch-metadata/#sec-fetch-mode-header]
	 */
	const SEC_FETCH_MODE = 'Sec-Fetch-Mode';

	/**
	 * Sec-Fetch-Site HTTP message header field name
	 *
	 * [https://www.w3.org/TR/fetch-metadata/#sec-fetch-site-header]
	 */
	const SEC_FETCH_SITE = 'Sec-Fetch-Site';

	/**
	 * Sec-Fetch-Storage-Access HTTP message header field name
	 *
	 * [https://privacycg.github.io/storage-access-headers]
	 */
	const SEC_FETCH_STORAGE_ACCESS = 'Sec-Fetch-Storage-Access';

	/**
	 * Sec-Fetch-User HTTP message header field name
	 *
	 * [https://www.w3.org/TR/fetch-metadata/#sec-fetch-user-header]
	 */
	const SEC_FETCH_USER = 'Sec-Fetch-User';

	/**
	 * Sec-GPC HTTP message header field name
	 *
	 * [Global Privacy Control (GPC)]
	 */
	const SEC_GPC = 'Sec-GPC';

	/**
	 * Sec-Purpose HTTP message header field name
	 *
	 * [Fetch]
	 */
	const SEC_PURPOSE = 'Sec-Purpose';

	/**
	 * Sec-Token-Binding HTTP message header field name
	 *
	 * [RFC 8473: Token Binding over HTTP]
	 */
	const SEC_TOKEN_BINDING = 'Sec-Token-Binding';

	/**
	 * Sec-WebSocket-Accept HTTP message header field name
	 *
	 * [RFC 6455: The WebSocket Protocol]
	 */
	const SEC_WEB_SOCKET_ACCEPT = 'Sec-WebSocket-Accept';

	/**
	 * Sec-WebSocket-Extensions HTTP message header field name
	 *
	 * [RFC 6455: The WebSocket Protocol]
	 */
	const SEC_WEB_SOCKET_EXTENSIONS = 'Sec-WebSocket-Extensions';

	/**
	 * Sec-WebSocket-Key HTTP message header field name
	 *
	 * [RFC 6455: The WebSocket Protocol]
	 */
	const SEC_WEB_SOCKET_KEY = 'Sec-WebSocket-Key';

	/**
	 * Sec-WebSocket-Protocol HTTP message header field name
	 *
	 * [RFC 6455: The WebSocket Protocol]
	 */
	const SEC_WEB_SOCKET_PROTOCOL = 'Sec-WebSocket-Protocol';

	/**
	 * Sec-WebSocket-Version HTTP message header field name
	 *
	 * [RFC 6455: The WebSocket Protocol]
	 */
	const SEC_WEB_SOCKET_VERSION = 'Sec-WebSocket-Version';

	/**
	 * Security-Scheme HTTP message header field name
	 *
	 * [RFC 2660: The Secure HyperText Transfer Protocol]
	 */
	const SECURITY_SCHEME = 'Security-Scheme';

	/**
	 * Server HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 10.2.4: HTTP Semantics
	 */
	const SERVER = 'Server';

	/**
	 * Server-Timing HTTP message header field name
	 *
	 * [Server Timing]
	 */
	const SERVER_TIMING = 'Server-Timing';

	/**
	 * Set-Cookie HTTP message header field name
	 *
	 * [RFC 6265: HTTP State Management Mechanism]
	 */
	const SET_COOKIE = 'Set-Cookie';

	/**
	 * Set-Cookie2 HTTP message header field name
	 *
	 * [RFC 2965: HTTP State Management Mechanism]
	 */
	const SET_COOKIE_2 = 'Set-Cookie2';

	/**
	 * SetProfile HTTP message header field name
	 *
	 * [Implementation of OPS Over HTTP]
	 */
	const SET_PROFILE = 'SetProfile';

	/**
	 * Signature HTTP message header field name
	 *
	 * [RFC 9421, Section 4.2: HTTP Message Signatures]
	 */
	const SIGNATURE = 'Signature';

	/**
	 * Signature-Input HTTP message header field name
	 *
	 * [RFC 9421, Section 4.1: HTTP Message Signatures]
	 */
	const SIGNATURE_INPUT = 'Signature-Input';

	/**
	 * SLUG HTTP message header field name
	 *
	 * [RFC 5023: The Atom Publishing Protocol]
	 */
	const SLUG = 'SLUG';

	/**
	 * SoapAction HTTP message header field name
	 *
	 * [Simple Object Access Protocol (SOAP) 1.1]
	 */
	const SOAP_ACTION = 'SoapAction';

	/**
	 * Status-URI HTTP message header field name
	 *
	 * [RFC 2518: HTTP Extensions for Distributed Authoring -- WEBDAV]
	 */
	const STATUS_URI = 'Status-URI';

	/**
	 * Strict-Transport-Security HTTP message header field name
	 *
	 * [RFC 6797: HTTP Strict Transport Security (HSTS)]
	 */
	const STRICT_TRANSPORT_SECURITY = 'Strict-Transport-Security';

	/**
	 * Sunset HTTP message header field name
	 *
	 * [RFC 8594: The Sunset HTTP Header Field]
	 */
	const SUNSET = 'Sunset';

	/**
	 * Surrogate-Capability HTTP message header field name
	 *
	 * [Edge Architecture Specification]
	 */
	const SURROGATE_CAPABILITY = 'Surrogate-Capability';

	/**
	 * Surrogate-Control HTTP message header field name
	 *
	 * [Edge Architecture Specification]
	 */
	const SURROGATE_CONTROL = 'Surrogate-Control';

	/**
	 * TCN HTTP message header field name
	 *
	 * [RFC 2295: Transparent Content Negotiation in HTTP]
	 */
	const TCN = 'TCN';

	/**
	 * TE HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 10.1.4: HTTP Semantics
	 */
	const TE = 'TE';

	/**
	 * Timeout HTTP message header field name
	 *
	 * [RFC 4918: HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)]
	 */
	const TIMEOUT = 'Timeout';

	/**
	 * Timing-Allow-Origin HTTP message header field name
	 *
	 * [Resource Timing Level 1]
	 */
	const TIMING_ALLOW_ORIGIN = 'Timing-Allow-Origin';

	/**
	 * Topic HTTP message header field name
	 *
	 * [RFC 8030, Section 5.4: Generic Event Delivery Using HTTP Push]
	 */
	const TOPIC = 'Topic';

	/**
	 * Traceparent HTTP message header field name
	 *
	 * [Trace Context]
	 */
	const TRACEPARENT = 'Traceparent';

	/**
	 * Tracestate HTTP message header field name
	 *
	 * [Trace Context]
	 */
	const TRACESTATE = 'Tracestate';

	/**
	 * Trailer HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 6.6.2: HTTP Semantics
	 */
	const TRAILER = 'Trailer';

	/**
	 * Transfer-Encoding HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9112 Section 6.1: HTTP Semantics
	 */
	const TRANSFER_ENCODING = 'Transfer-Encoding';

	/**
	 * TTL HTTP message header field name
	 *
	 * [RFC 8030, Section 5.2: Generic Event Delivery Using HTTP Push]
	 */
	const TTL = 'TTL';

	/**
	 * Upgrade HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 7.8: HTTP Semantics
	 */
	const UPGRADE = 'Upgrade';

	/**
	 * Urgency HTTP message header field name
	 *
	 * [RFC 8030, Section 5.3: Generic Event Delivery Using HTTP Push]
	 */
	const URGENCY = 'Urgency';

	/**
	 * URI HTTP message header field name
	 *
	 * [RFC 2068: Hypertext Transfer Protocol -- HTTP/1.1]
	 */
	const URI = 'URI';

	/**
	 * Use-As-Dictionary HTTP message header field name
	 *
	 * [RFC-ietf-httpbis-compression-dictionary-19, Section 2.1: Compression Dictionary Transport]
	 */
	const USE_AS_DICTIONARY = 'Use-As-Dictionary';

	/**
	 * User-Agent HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 10.1.5: HTTP Semantics
	 */
	const USER_AGENT = 'User-Agent';

	/**
	 * Variant-Vary HTTP message header field name
	 *
	 * [RFC 2295: Transparent Content Negotiation in HTTP]
	 */
	const VARIANT_VARY = 'Variant-Vary';

	/**
	 * Vary HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 12.5.5: HTTP Semantics
	 */
	const VARY = 'Vary';

	/**
	 * Via HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 7.6.3: HTTP Semantics
	 */
	const VIA = 'Via';

	/**
	 * Want-Content-Digest HTTP message header field name
	 *
	 * [RFC 9530, Section 4: Digest Fields]
	 */
	const WANT_CONTENT_DIGEST = 'Want-Content-Digest';

	/**
	 * Want-Digest HTTP message header field name
	 *
	 * [RFC 3230: Instance Digests in HTTP]
	 */
	const WANT_DIGEST = 'Want-Digest';

	/**
	 * Want-Repr-Digest HTTP message header field name
	 *
	 * [RFC 9530, Section 4: Digest Fields]
	 */
	const WANT_REPR_DIGEST = 'Want-Repr-Digest';

	/**
	 * Warning HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9111 Section 5.5: HTTP Caching
	 */
	const WARNING = 'Warning';

	/**
	 * WWW-Authenticate HTTP message header field name
	 *
	 * @see https://tools.ietf.org/html/rfc9110 Section 11.6.1: HTTP Semantics
	 */
	const WWW_AUTHENTICATE = 'WWW-Authenticate';

	/**
	 * X-Content-Type-Options HTTP message header field name
	 *
	 * [Fetch]
	 */
	const X_CONTENT_TYPE_OPTIONS = 'X-Content-Type-Options';

	/**
	 * X-Frame-Options HTTP message header field name
	 *
	 * [HTML]
	 */
	const X_FRAME_OPTIONS = 'X-Frame-Options';
}
